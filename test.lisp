(defun acciones-disp (estado)
	(setq acciones-disponibles NIL)
	(setq casillas (fifth estado))
	(setq casillas-aux (copy-seq casillas))
	(setq i 1)
	(loop
		(when (> i 6) (return acciones-disponibles))
		(if (not (= (car casillas-aux) 0)) (push (genera-nodo i casillas) acciones-disponibles))
		(setq i (+ i 1))
		(setq casillas-aux (cdr casillas-aux))
	)
	(return-from acciones-disp acciones-disponibles)
)

(defun genera-nodo (indice estado)
	(setq cant-piedras (car (nthcdr (- indice 1) estado)))
	(setq cant-piedras-aux cant-piedras)
	(setq aux (copy-seq estado))
	(setq iterador (+ 1 indice))
	(rplaca (nthcdr (- indice 1) aux) 0)
	(setq lugar 2)
	(loop
		(when (= cant-piedras 0) (return aux))
		(cond
			((not (= (mod lugar (- 15 indice)) 0)) (rplaca (nthcdr (- iterador 1) aux) (+ 1 (car (nthcdr (- iterador 1) aux)))) (setq cant-piedras (- cant-piedras 1)))
		)
		(setq iterador (+ 1 iterador))
		(if (> iterador 14) (setq iterador 1))
		(setq lugar (+ lugar 1))
	)
	(cond
		((< cant-piedras-aux 14)
			(setq bolas (+ indice cant-piedras-aux))
			(if (<= 14 bolas) (setq bolas (- bolas 13)))
			(cond
				((and (<= bolas 6) (= (car (nthcdr (- bolas 1) estado)) 0))
					(rplaca (nthcdr 6 aux) (+ (car (nthcdr 6 aux)) (car (nthcdr (- 14 bolas 1) estado)) 1))
					(rplaca (nthcdr (- 13 bolas) aux) 0)
					(rplaca (nthcdr (- bolas 1) aux) 0)
				)
			)
		)
	)
	(return-from genera-nodo aux)
)

;(genera-nodo 5 '(2 0 4 0 11 0 9 1 0 0 5 2 10 4))
;(acciones-disp '(1 2 1 10 (4 4 4 4 4 4 0 4 4 4 4 4 4 0)))
(print (acciones-disp '(1 2 1 10 (4 6 0 3 2 3 6 8 2 2 1 1 0 0))))
;(setq lista NIL)
;(print (genera-nodo 1 '(4 4 4 4 4 4 0 4 4 4 4 4 4 0)))
;(print acciones-disponibles)
; (print (genera-nodo 6 '(4 4 4 4 4 4 0 4 4 4 4 4 4 0)))
; (print (genera-nodo 6 '(0 2 3 8 1 9 5 8 1 1 0 2 3 5)))
; (print (genera-nodo 2 '(4 4 4 4 4 4 0 4 4 4 4 4 4 0)))
; (print (genera-nodo 6 '(4 4 4 4 4 4 0 4 4 4 4 4 4 0)))
; (print (genera-nodo 6 '(0 2 3 8 1 9 5 8 1 1 0 2 3 5)))
; (print (genera-nodo 2 '(4 4 4 4 4 4 0 4 4 4 4 4 4 0)))
; (print (genera-nodo 6 '(4 4 4 4 4 4 0 4 4 4 4 4 4 0)))
; (print (genera-nodo 6 '(0 2 3 8 1 9 5 8 1 1 0 2 3 5)))
