(defun genera-nodo (indice estado)
	(setq cant-piedras (car (nthcdr (- indice 1) estado)))
	(setq cant-piedras-aux cant-piedras)
	;(print 'cant-piedras-inicial)
	;(print cant-piedras)
	(setq aux (copy-seq estado))
	;(print 'aux-inicial)
	;(print aux)
	(setq iterador (+ 1 indice))
	;(print 'iterador-inicial)
	;(print iterador)
	(rplaca (nthcdr (- indice 1) aux) 0)
	;(print 'aux-tras-cero)
	;(print aux)
	(setq lugar 2)
	(loop
		(when (= cant-piedras 0) (return aux))
		(cond
			((not (= (mod lugar (- 15 indice)) 0)) (rplaca (nthcdr (- iterador 1) aux) (+ 1 (car (nthcdr (- iterador 1) aux)))) (setq cant-piedras (- cant-piedras 1)))
		)
		(setq iterador (+ 1 iterador))
		(if (> iterador 14) (setq iterador 1))
		;(print 'aux-modificado-suma)
		;(print aux)
		;(print 'cant-piedras-loop)
		;(print cant-piedras)
		(setq lugar (+ lugar 1))
		;(print 'lugar)
		;(print lugar)
	)
	(print aux)
	(cond
		((< cant-piedras-aux 14)
			(print cant-piedras-aux)
			(setq bolas (+ indice cant-piedras-aux))
			(print bolas)
			;(if (>= bolas 14) (rplaca (nthcdr 6 aux) (+ 1 (car (nthcdr 6 aux)))))
			(if (<= 14 bolas) (setq bolas (- bolas 13)))
			(print bolas)
			(cond
				((and (<= bolas 6) (= (car (nthcdr (- bolas 1) estado)) 0))
					(print bolas)
					(print (car (nthcdr 6 aux)))
					(print (car (nthcdr (- 14 bolas 1) estado)))
					(rplaca (nthcdr 6 aux) (+ (car (nthcdr 6 aux)) (car (nthcdr (- 14 bolas 1) estado)) 1))
					(rplaca (nthcdr (- 13 bolas) aux) 0)
					(rplaca (nthcdr (- bolas 1) aux) 0)
				)
			)
		)
	)
	(print aux)
)

(print (genera-nodo 5 '(2 0 4 0 11 0 9 1 0 0 5 2 10 4)))
; (print (genera-nodo 6 '(4 4 4 4 4 4 0 4 4 4 4 4 4 0)))
; (print (genera-nodo 6 '(0 2 3 8 1 9 5 8 1 1 0 2 3 5)))
; (print (genera-nodo 2 '(4 4 4 4 4 4 0 4 4 4 4 4 4 0)))
; (print (genera-nodo 6 '(4 4 4 4 4 4 0 4 4 4 4 4 4 0)))
; (print (genera-nodo 6 '(0 2 3 8 1 9 5 8 1 1 0 2 3 5)))
; (print (genera-nodo 2 '(4 4 4 4 4 4 0 4 4 4 4 4 4 0)))
; (print (genera-nodo 6 '(4 4 4 4 4 4 0 4 4 4 4 4 4 0)))
; (print (genera-nodo 6 '(0 2 3 8 1 9 5 8 1 1 0 2 3 5)))